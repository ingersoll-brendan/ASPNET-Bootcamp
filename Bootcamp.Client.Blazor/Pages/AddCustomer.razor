@page "/customers/add"
@using Bootcamp.Client.Blazor.Services
@using Bootcamp.Data.Entities
@using Bootcamp.Client.Blazor.Config;
@inject NavigationManager NavManager

<h3>Add New Customer</h3>

<EditForm Model="@Customer" OnValidSubmit="this.SaveCustomer">
    <DataAnnotationsValidator />
    <div class="row">
        <div class="form-group col-12 col-md-6 mb-3">
            <label for="customerFirstName">First Name</label>
            <InputText class="form-control" id="customerFirstName" @bind-Value="Customer!.FirstName" />
            <ValidationMessage For="() => Customer.FirstName" />
        </div>

        <div class="form-group col-12 col-md-6 mb-3">
            <label for="customerLastName">Last Name</label>
            <InputText class="form-control" id="customerLastName" @bind-Value="Customer!.LastName" />
            <ValidationMessage For="() => Customer.LastName" />
        </div>
    </div>
    <div class="row">
        <div class="form-group col-12 col-md-6 mb-3">
            <label for="customerEmail">Email</label>
            <InputText class="form-control" id="customerEmail" @bind-Value="Customer!.Email" />
            <ValidationMessage For="() => Customer.Email" />
        </div>

        <div class="form-group col-12 col-md-6 mb-3">
            <label for="customerPhoneNumber">Phone Number</label>
            <InputNumber class="form-control" id="customerPhoneNumber" @bind-Value="Customer!.PhoneNumber" />
            <ValidationMessage For="() => this.Customer.PhoneNumber" />
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
    <button class="btn border" @onclick="this.GoBack">Back</button>
</EditForm>

@code {
    private Customer? Customer { get; set; }

    [Inject]
    public CustomerService CustomerService { get; set; } = default!;


    protected override void OnInitialized()
    {
        this.Customer = new Customer();
    }

    public async Task SaveCustomer()
    {
        // TODO: Add validation checks to make sure empty data cant be submitted
        this.Customer = await this.CustomerService.AddCustomerAsync(this.Customer);
        this.GoBack();
    }

    public void GoBack()
    {
        NavManager.NavigateTo("/customers");
    }
}
